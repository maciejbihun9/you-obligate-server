# AT THE BEGINNING JUST TEST DIFFERENT CASES

 * user creates a group in an init class:
 + is this should be in an init class?
 - not neccesserly, because I can get a user and then
 set a group to that user,
 - not every user has to have his own group, he might join this group in a method

 + is it really matter where i put this code?:
 - yes, because I want to test only realtions betwenn groups

 + should I create more users? - yes

 * append many users to one group:
 - simulate relations between them,
 - simulate creating obligations,
 - synchronize entire process of adding money, removing money from a group,
 - exchanging money between groups - see if this is really possible,
 - define interest rate for a group,

 * add many users to one group:
 - design create obligation group strategy in the right way, that will be ok for other users,
 - at the beginning users have an initial value of variables that is default set by an admin,
 - if I set RegisteredService to an admin then I will be able to set obligation strategy
 so admin will have a lot of work, because of setting initial values for users,
 - but he will, because it will be fun to do it, I think this will be fun
 - having that group of people with obligation strategy they will be able to create obligations easly,

 * co się dzieje po wygaśnięciu obligacji?:

 * obligation group sounds better?:
 - because users obligates that they will pay those bonds,
