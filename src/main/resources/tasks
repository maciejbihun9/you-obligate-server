
 * consider how a user might join a group:
 - a user see a group,
 - see all of this group details, issued bonds, people on the board,
 - he enters the obligation group main page, main view, he see all details about this group,
 what they offer, for who they are looking for,
 - a user clicks join proposal

 questions:
 + what should be included in a group request?:
 - a group will verify a user under different angles
 - a user has to specify a registered service, the real purpose of
 why he has made such a request,
 - maybe he can just set up an account, that would be easy to start,
 just make a request, first register all user services
 - UserRegisteredService that will be a part of a request
 - I think they should make a real request with the exact user registered service
 that is the subject of a request,
 - an example user might even send his proposition
 of a register service strategy to a group,
 - he might send proposition of a unit work, salary for one unit - just like in a job request,
 - how people are negotiating salaries, they are doing it

 + Should I have join request model? - yes:
 - GroupJoinRequest model class,
 - user_id, register_service_id, group_id, issued_date, proposed_work_unit_price, proposed_unit_of_work,
 - a group would fucking receive this fucking request,
 - there will be a panel where all people will be able to see those requests,
 - but notifications about it will be send only to selected people

 + who would be responsible for receiving those requests? - all users, but with limited rights to vote for sure
 - at the beginning I think all users should have the right to vote who can join a group and who can not,
 - to estimate unit of work price, unit of work type,
 - they have to feel this power, that they are responsible for this group and for this,
 - later I might even introduce some kind of an indicator to estimate an average prices,
 - it would be even hard to get a response from a user, right?,
 - Let's say that I have to wait for a user response 1 or 2 days,
 it would be really bad to wait for it that much,
 - actually there can only be one person that is responsible for communicating with a requester,
 - there will be selected group of people that will receive those requests, based on those requests

 implementation:
 - create a button - join a group, at the top of the group view,
 - show a view where user will be able to fill registered service, one unit of work price and, unit of work type,
 - send an object:
 user_id, register_service_id, group_id, issued_date, proposed_work_unit_price, proposed_unit_of_work,
 - show a message that a request was sent, and show a button to back to the group view, a group
 - create a service that will send all of those objects under specified url,
 - create a model on the server side,
 - create all of those repositories and services,
 - display totally new view and show that a request has been made,
 - display all details about made requests,
 - create a panel for a user where he will be ready to view all of those requests,
 - poll for all requests in this panel,
 - and then, after the decision was made a person will make a call to a requester,
 they will negotiate the final price and
 - a user will send a letter of an intent and a group will create
 for him a registered service obligation strategy,
